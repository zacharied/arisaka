# {{{1 Initialization

set -g prefix C-Space
set -g prefix2 'C-\\'
bind Space send-prefix

# {{{2 Compatibility

set escape-time 10
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# {{{1 Visuals

# {{{2 Statusline

set -g status-style "bg=red"

# The `printf` is printing a number of spaces equal to half the width of the window. When both the left and right status bars
#  have this, the spaces take up (almost) the whole status bar. Note the `- 1` to the width, which is just there since if we 
#  go any higher, tmux just gives up on displaying it altogether.
prefix_token="#[bg=white]#(printf '\ %.0s' `seq 1 $(expr $(tmux display -p '#{window_width}') / 2 - 1)`)"
set -g status-left-length 1024
set -g status-right-length 1024
set -g status-left "#{?client_prefix,${prefix_token}, }"
set -g status-right "#{?client_prefix,${prefix_token}, [ #H:#[bold]#S#[default] ] }"

# {{{1 Keybinds

# No modifier: pane/local
# Shift: windows
# Control: session

unbind-key -a

setw -g mode-keys vi
setw -g status-keys vi
bind : command-prompt

# {{{2 Copy mode

bind [ copy-mode
bind -T copy-mode-vi v begin-selection
bind -T copy-mode-vi y copy-selection-and-cancel
bind -T copy-mode-vi M-y copy-selection
bind -T copy-mode-vi C-v rectangle-toggle

# {{{2 Session management

bind C-r source ~/.tmux.conf \; 
    display-message "Configuration reloaded."

bind R command-prompt \
    -p "New session name:" \
    "rename-session %%"

bind C-s choose-session
bind 

# {{{2 Local management

bind % split-window -v
bind '"' split-window -h

bind M-h resize-pane -L 5
bind z resize-pane -Z

bind x kill-pane
bind X kill-window

bind = break-pane
bind + command-prompt \
    -p "Target:" \
    "join-pane -t %%"

bind W new-window -a
bind M-W new-window

# {{{2 Layouts

bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

# {{{2 Navigation

bind h selectp -t {left-of}
bind j selectp -t {down-of}
bind k selectp -t {up-of}
bind l selectp -t {right-of}

bind i selectp -t {last}

bind n selectp -t {next}
bind p selectp -t {previous}

bind N selectw -t {next}
bind P selectw -t {previous}

bind t choose-tree

# {{{2 Misc

bind . display-panes

# }}}1

# vim: set fdm=marker:
